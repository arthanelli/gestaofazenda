{
  "_args": [
    [
      {
        "raw": "lucasmazza/page.js",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "lucasmazza/page.js",
        "spec": "github:lucasmazza/page.js",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:lucasmazza/page.js.git",
          "sshUrl": "git+ssh://git@github.com/lucasmazza/page.js.git",
          "httpsUrl": "git+https://github.com/lucasmazza/page.js.git",
          "gitUrl": "git://github.com/lucasmazza/page.js.git",
          "shortcut": "github:lucasmazza/page.js",
          "directUrl": "https://raw.githubusercontent.com/lucasmazza/page.js/master/package.json"
        }
      },
      "C:\\Users\\rafael.araujo\\projetos\\gestaofazenda"
    ]
  ],
  "_from": "lucasmazza/page.js",
  "_id": "@lucasmazza/page@1.1.0",
  "_inCache": true,
  "_location": "/@lucasmazza/page",
  "_phantomChildren": {},
  "_requested": {
    "raw": "lucasmazza/page.js",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "lucasmazza/page.js",
    "spec": "github:lucasmazza/page.js",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:lucasmazza/page.js.git",
      "sshUrl": "git+ssh://git@github.com/lucasmazza/page.js.git",
      "httpsUrl": "git+https://github.com/lucasmazza/page.js.git",
      "gitUrl": "git://github.com/lucasmazza/page.js.git",
      "shortcut": "github:lucasmazza/page.js",
      "directUrl": "https://raw.githubusercontent.com/lucasmazza/page.js/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "git://github.com/lucasmazza/page.js.git#c76496d9b018dbef5fcc9ec9f2350dce959472d7",
  "_shasum": "3ae7200d634eede5bab7ad26116b7081dda92b8e",
  "_shrinkwrap": null,
  "_spec": "lucasmazza/page.js",
  "_where": "C:\\Users\\rafael.araujo\\projetos\\gestaofazenda",
  "author": {
    "name": "Lucas Mazza",
    "email": "lucastmazza@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/lucasmazza/page.js/issues"
  },
  "dependencies": {},
  "description": "Running your javascript code, one page at a time.",
  "devDependencies": {
    "babel-core": "^6.13.2",
    "babel-loader": "^6.2.5",
    "babel-preset-es2015": "^6.13.2",
    "interpolate": "^0.1.0",
    "karma": "^1.2.0",
    "karma-phantomjs-launcher": "^1.0.1",
    "karma-qunit": "^1.2.0",
    "karma-webpack": "^2.0.1",
    "phantomjs-prebuilt": "^2.1.12",
    "qunitjs": "^2.0.1",
    "uglify-js": "^2.7.3",
    "webpack": "^2.2.1"
  },
  "files": [
    "dist/*",
    "src/*",
    "LICENSE",
    "README.md"
  ],
  "gitHead": "c76496d9b018dbef5fcc9ec9f2350dce959472d7",
  "homepage": "https://github.com/lucasmazza/page.js#readme",
  "license": "MIT",
  "main": "dist/page.js",
  "name": "@lucasmazza/page",
  "optionalDependencies": {},
  "readme": "# page.js\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/lucasmazza/page.js.svg)](https://greenkeeper.io/)\n\n**page.js** is a small library to execute your JavaScript code in a per-page\nscope. Check the files under the `example` folder for a simple display on how to\nstart using this.\n\n## Usage\n\ninclude `dist/page.js` in your html files and write your *initializers* using the\n`page.at()` function.\n\n```javascript\npage.at('dashboard', function() {\n  alert('hello, from the dashboard page!');\n})\n\npage.at('dashboard', function() {\n  alert('I am the dashboard page too');\n})\n\npage.at('signup', function() {\n  alert('Dorothy, we are not on the dashboard page anymore...');\n})\n\npage.at('signup', function(transition) {\n  // scope => 'signup'\n  alert(`You are at the ${transition.scope} page!`);\n})\n\npage.dispatch();\n```\n\nBy default, the library will look for a `data-page` attribute on the `body` tag\nto check if the current page is indeed the dashboard page (for instance).\n\n```html\n...\n<body data-page='dashboard'>\n...\n```\n**Attention** - `page.js` doesn't handle any kind of `ready` DOM event - if you\nkeep your JavaScript code/files on the end of the body tag this won't be a issue.\nIf you want to run the initializers for a specific page on your own or inside a\n`$.ready` block (or whatever your favorite framework uses for this), use\n`page.dispatch()`:\n\n```javascript\npage.at('home', function() {\n  alert('Hello!');\n})\njQuery.ready(function($) {\n  page.dispatch(); // checks `data-page` attribute and call the registered functions.\n})\n```\n\n### `:before` and `:after` filters\n\nYou can assign initializers to run before and after the initializers registered\nfor the current page.\n\n```javascript\npage.at(':before', function() {\n  // I'm running first;\n})\n\npage.at(':after', function() {\n  // I'm running after;\n})\n\npage.at('home', function() {\n  // I'm the middle of the chain.\n})\n```\n\nThe `:before` and `:after` initializers will always be called even if there's\nany regular initializer registered for the current page.\n\nYou can also use `page.always` to assign initializers in the same fashion as\nusing `:before`.\n\n```javascript\npage.always(function() { /* ... */ });\n```\n\n### Scope variants\n\nScope variants are optional segments that can be used to run more specific\ninitializers and isolate global ones. Variants are prefixed with the `+` sign\non the scope name.\n\n```javascript\n// Regular initializer, runs on every 'dashboard' page.\npage.at('dashboard', function() { });\n\n// Initializer with the 'admin-user' variant, runs only when the variant is present.\npage.at('dashboard+admin-user', function() { });\n```\n\nWith the code above, both initializers will be called if the current page is\n`dashboard+admin-user`, but only the first will be called if the page is\njust `dashboard` or `dashboard+another-thing`.\n\n### Halting the execution chain\n\nIf you need to stop the initializers, just return `false` and all the following\ninitializers won't be executed.\n\n```javascript\npage.at('signup', function() {\n  alert('hi!');\n  return false;\n})\n\npage.at('signup', function() {\n  alert('this alert will never be called.');\n})\n```\n\n### `Transition` object\n\nEach initializer function receives a `transition` object with the following properties:\n\n* `scope` - A `String` with the scope that was matched.\n* `variants` - An `Array` of the variants matched during the dispatch.\n* `data` - Custom data given to the `dispatch` call.\n\n### Checking somewhere else for the page name.\n\nIf you don't want to use the `data-page` attribute, you can change how `page.js`\nfinds the name of your page.\n\n```javascript\n// checks for the body tag ID, using jQuery.\npage.recognize = function() {\n  return $('body').attr('id');\n}\n\npage.at('the-body-id', function() {\n  //...\n})\n```\n\n## Installation\n\nYou can install `page` through NPM or Bower:\n\n```sh\nbower install lucasmazza/page.js\n# or\nnpm install lucasmazza/page.js\n```\n\n`npm install page.js` will install [visionmedia/page.js](https://github.com/visionmedia/page.js)\ninstead.\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2011-2015 Lucas Mazza &lt;lucastmazza@gmail.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lucasmazza/page.js.git"
  },
  "scripts": {
    "build": "npm run build-debug && npm run build-min",
    "build-debug": "webpack",
    "build-min": "uglifyjs dist/page.js --comments '/!/' -m screw_ie8=true -c screw_ie8=true,unused=false -o dist/page.min.js",
    "test": "karma start --single-run"
  },
  "version": "1.1.0"
}
